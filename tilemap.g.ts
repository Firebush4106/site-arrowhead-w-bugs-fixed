// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "Deserted Grasslands":
            case "level3":return tiles.createTilemap(hex`200020000303040406060c010101010101020201010101010101010101010101010101010303040404090c07010101110102020101010d0d0e010101010d01010d0d010103030404060c07010101010101020205010d010d0101010d0d0d010d010d0101030304040c0c07010101010d010202010d01010d11010d010d010d01010d0101030304060c070101110f0d010102020d0d010f0f010d010d010d01010d0101010304040a0a0101010d0d0d010102020d0d01010f0f0f010d0d01010d0d0501010304080a0601010d0d0f0f010102020d0101010d010f0d0d05050f0f010d0101060808070101050d0f0f0f0f01020205010101010d010d050f0f0f0f050d0101080707110105050f0f01010f01020201010f010d0d0d0d0f050d0d0f0f0101010b06010101050d0f0f0f0f0f0102020101010105050d0f0f0d050d0f0d1101010101010105050d0f0f050f0f010202010f0e0105010f0f0f0d0d010f0d01010e01010105010f0d0f0f0f0f0f01020201010101050d0f0f0f0f0d010f01010101010105050f0f0d0f0d0f0f0101020201010101110d010f0f0f0f010f0101010101010e010f0f0d0d05010d01010202010101050d01050f0d0d0f010f0101010101010501050f0d0d05050d0101020201010f010d050f0f0d05010f0f0101010101010f01050d0f0f05050d010102020105010d010d0f0f0d01010f0d01010f0101010101050d010f0d010d010102020105010d0d0f0f0d0501010d010101010101010505050d0f0f01010d101002020101050d010f0f0d0505010d0101010101011101010d0f0f0f011010100102020101010d01010f010501010d01010f0f010105010d050d10101010100101020201010f01010d0101010f01010101010f011201101010101010100f010f01020201010101010d0101050105050101010f01121010101005010d0f01010f010202010101010f0501050101050501010f0f01121010010501010f0d01010f0f02020101010f0f05010501010d050101110101120d0111050d010f010f0f0f0102020101010f0d01050101010d01010101010d0d010e010d0d010f0f0f010101020201010f0101010505010d0501010d0d0d0d0d0101010f0f010d010e010101020201010f0f0d010501050d010d0d010d0d010d01010f0f0f01010d0101010102020101010f0f01010f0d0d0d01010d0101010d0d0f0f010101010101010101020201010101010d01010d0101010d0101010101010f0f0f010101010101010102020101010101010d0d0d01110d01010101010101010d010f0f0f0f010101010202010101010101110d01010d0101010101010101010d0101010101010101010202010101010101010d0d0d010101010101010101010101010101010101010102020101010101010101010101010101010101`, img`
................................
...........2........2...........
................................
....................2...........
........2.......................
................................
................................
................................
...2............................
.............................2..
.................2.............2
................................
...................2............
..2.............................
................................
................................
................................
................................
.2..............................
................................
2...............................
2...............................
2............................2..
2..2............................
..2.............................
.........2......................
................................
................................
.........................2......
.....................2..........
................................
................................
`, [myTiles.transparency16,sprites.castle.tileDarkGrass3,sprites.vehicle.roadVertical,sprites.dungeon.hazardLava0,sprites.dungeon.hazardLava1,sprites.castle.tileDarkGrass1,sprites.dungeon.floorLight0,sprites.dungeon.floorLight1,sprites.dungeon.floorMixed,sprites.dungeon.floorLightMoss,sprites.dungeon.floorLight4,sprites.dungeon.floorDark4,sprites.dungeon.floorLight5,sprites.castle.tileDarkGrass2,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile4":
            case "tile6":return tile6;
            case "Rock":
            case "tile1":return tile1;
            case "Grass":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
            case "Tree small":
            case "tile4":return tile4;
            case "Red bricks":
            case "tile5":return tile5;
            case "myTile":
            case "tile7":return tile7;
            case "myTile0":
            case "tile8":return tile8;
            case "myTile2":
            case "tile9":return tile9;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
